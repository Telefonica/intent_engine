# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from . import l2smmd_pb2 as l2smmd__pb2

GRPC_GENERATED_VERSION = '1.66.2'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in l2smmd_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class L2SMMultiDomainServiceStub(object):
    """Service definition
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateNetwork = channel.unary_unary(
                '/l2smmd.L2SMMultiDomainService/CreateNetwork',
                request_serializer=l2smmd__pb2.CreateNetworkRequest.SerializeToString,
                response_deserializer=l2smmd__pb2.CreateNetworkResponse.FromString,
                _registered_method=True)
        self.DeleteNetwork = channel.unary_unary(
                '/l2smmd.L2SMMultiDomainService/DeleteNetwork',
                request_serializer=l2smmd__pb2.DeleteNetworkRequest.SerializeToString,
                response_deserializer=l2smmd__pb2.DeleteNetworkResponse.FromString,
                _registered_method=True)
        self.CreateOverlay = channel.unary_unary(
                '/l2smmd.L2SMMultiDomainService/CreateOverlay',
                request_serializer=l2smmd__pb2.CreateOverlayRequest.SerializeToString,
                response_deserializer=l2smmd__pb2.CreateOverlayResponse.FromString,
                _registered_method=True)
        self.AddCluster = channel.unary_unary(
                '/l2smmd.L2SMMultiDomainService/AddCluster',
                request_serializer=l2smmd__pb2.AddClusterRequest.SerializeToString,
                response_deserializer=l2smmd__pb2.AddClusterResponse.FromString,
                _registered_method=True)
        self.RemoveCluster = channel.unary_unary(
                '/l2smmd.L2SMMultiDomainService/RemoveCluster',
                request_serializer=l2smmd__pb2.RemoveClusterRequest.SerializeToString,
                response_deserializer=l2smmd__pb2.RemoveClusterResponse.FromString,
                _registered_method=True)
        self.DeleteOverlay = channel.unary_unary(
                '/l2smmd.L2SMMultiDomainService/DeleteOverlay',
                request_serializer=l2smmd__pb2.DeleteOverlayRequest.SerializeToString,
                response_deserializer=l2smmd__pb2.DeleteOverlayResponse.FromString,
                _registered_method=True)


class L2SMMultiDomainServiceServicer(object):
    """Service definition
    """

    def CreateNetwork(self, request, context):
        """Methods for network management
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteNetwork(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateOverlay(self, request, context):
        """Methods for overlay topology management
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddCluster(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveCluster(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteOverlay(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_L2SMMultiDomainServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateNetwork': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateNetwork,
                    request_deserializer=l2smmd__pb2.CreateNetworkRequest.FromString,
                    response_serializer=l2smmd__pb2.CreateNetworkResponse.SerializeToString,
            ),
            'DeleteNetwork': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteNetwork,
                    request_deserializer=l2smmd__pb2.DeleteNetworkRequest.FromString,
                    response_serializer=l2smmd__pb2.DeleteNetworkResponse.SerializeToString,
            ),
            'CreateOverlay': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateOverlay,
                    request_deserializer=l2smmd__pb2.CreateOverlayRequest.FromString,
                    response_serializer=l2smmd__pb2.CreateOverlayResponse.SerializeToString,
            ),
            'AddCluster': grpc.unary_unary_rpc_method_handler(
                    servicer.AddCluster,
                    request_deserializer=l2smmd__pb2.AddClusterRequest.FromString,
                    response_serializer=l2smmd__pb2.AddClusterResponse.SerializeToString,
            ),
            'RemoveCluster': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveCluster,
                    request_deserializer=l2smmd__pb2.RemoveClusterRequest.FromString,
                    response_serializer=l2smmd__pb2.RemoveClusterResponse.SerializeToString,
            ),
            'DeleteOverlay': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteOverlay,
                    request_deserializer=l2smmd__pb2.DeleteOverlayRequest.FromString,
                    response_serializer=l2smmd__pb2.DeleteOverlayResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'l2smmd.L2SMMultiDomainService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('l2smmd.L2SMMultiDomainService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class L2SMMultiDomainService(object):
    """Service definition
    """

    @staticmethod
    def CreateNetwork(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/l2smmd.L2SMMultiDomainService/CreateNetwork',
            l2smmd__pb2.CreateNetworkRequest.SerializeToString,
            l2smmd__pb2.CreateNetworkResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteNetwork(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/l2smmd.L2SMMultiDomainService/DeleteNetwork',
            l2smmd__pb2.DeleteNetworkRequest.SerializeToString,
            l2smmd__pb2.DeleteNetworkResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateOverlay(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/l2smmd.L2SMMultiDomainService/CreateOverlay',
            l2smmd__pb2.CreateOverlayRequest.SerializeToString,
            l2smmd__pb2.CreateOverlayResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AddCluster(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/l2smmd.L2SMMultiDomainService/AddCluster',
            l2smmd__pb2.AddClusterRequest.SerializeToString,
            l2smmd__pb2.AddClusterResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RemoveCluster(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/l2smmd.L2SMMultiDomainService/RemoveCluster',
            l2smmd__pb2.RemoveClusterRequest.SerializeToString,
            l2smmd__pb2.RemoveClusterResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteOverlay(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/l2smmd.L2SMMultiDomainService/DeleteOverlay',
            l2smmd__pb2.DeleteOverlayRequest.SerializeToString,
            l2smmd__pb2.DeleteOverlayResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
